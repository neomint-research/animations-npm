96700282d6d237bdfe2efeaaeae3eb8f
"use strict";
"use client";

var u = Object.create;
var n = Object.defineProperty;
var w = Object.getOwnPropertyDescriptor;
var a = Object.getOwnPropertyNames,
  m = Object.getOwnPropertySymbols,
  h = Object.getPrototypeOf,
  c = Object.prototype.hasOwnProperty,
  k = Object.prototype.propertyIsEnumerable;
var C = (o, r, e) => r in o ? n(o, r, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: e
  }) : o[r] = e,
  i = (o, r) => {
    for (var e in r || (r = {})) c.call(r, e) && C(o, e, r[e]);
    if (m) for (var e of m(r)) k.call(r, e) && C(o, e, r[e]);
    return o;
  };
var S = (o, r) => {
    for (var e in r) n(o, e, {
      get: r[e],
      enumerable: !0
    });
  },
  f = (o, r, e, s) => {
    if (r && typeof r == "object" || typeof r == "function") for (let t of a(r)) !c.call(o, t) && t !== e && n(o, t, {
      get: () => r[t],
      enumerable: !(s = w(r, t)) || s.enumerable
    });
    return o;
  };
var g = (o, r, e) => (e = o != null ? u(h(o)) : {}, f(r || !o || !o.__esModule ? n(e, "default", {
    value: o,
    enumerable: !0
  }) : e, o)),
  x = o => f(n({}, "__esModule", {
    value: !0
  }), o);
var L = {};
S(L, {
  default: () => v
});
module.exports = x(L);
var p = g(require("react")),
  d = require("react"),
  l = require("../IconoirContext.js");
const G = (o, r) => {
    const e = p.useContext(l.IconoirContext),
      s = i(i({}, e), o);
    return p.createElement("svg", i({
      width: "1.5em",
      height: "1.5em",
      viewBox: "0 0 24 24",
      strokeWidth: 1.5,
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      color: "currentColor",
      ref: r
    }, s), p.createElement("path", {
      d: "M19.5 8C15.5 8 13 8 9 8C9 8 9 8 9 8C9 8 4 8 4 12.7059C4 18 9 18 9 18C12.4286 18 14.2857 18 17.7143 18",
      stroke: "currentColor",
      strokeLinecap: "round",
      strokeLinejoin: "round"
    }), p.createElement("path", {
      d: "M16.5 11.5C17.8668 10.1332 18.6332 9.36683 20 8C18.6332 6.63317 17.8668 5.86683 16.5 4.5",
      stroke: "currentColor",
      strokeLinecap: "round",
      strokeLinejoin: "round"
    }));
  },
  V = (0, d.forwardRef)(G);
var v = V;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1IiwiT2JqZWN0IiwiY3JlYXRlIiwibiIsImRlZmluZVByb3BlcnR5IiwidyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImEiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwibSIsImdldE93blByb3BlcnR5U3ltYm9scyIsImgiLCJnZXRQcm90b3R5cGVPZiIsImMiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImsiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkMiLCJvIiwiciIsImUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsImkiLCJjYWxsIiwiUyIsImdldCIsImYiLCJzIiwidCIsImciLCJfX2VzTW9kdWxlIiwieCIsIkwiLCJkZWZhdWx0IiwidiIsIm1vZHVsZSIsImV4cG9ydHMiLCJwIiwicmVxdWlyZSIsImQiLCJsIiwiRyIsInVzZUNvbnRleHQiLCJJY29ub2lyQ29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJzdHJva2VXaWR0aCIsImZpbGwiLCJ4bWxucyIsImNvbG9yIiwicmVmIiwic3Ryb2tlIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwiViIsImZvcndhcmRSZWYiXSwic291cmNlcyI6WyJSZWRvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO3ZhciB1PU9iamVjdC5jcmVhdGU7dmFyIG49T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciB3PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dmFyIGE9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMsbT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLGg9T2JqZWN0LmdldFByb3RvdHlwZU9mLGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxrPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7dmFyIEM9KG8scixlKT0+ciBpbiBvP24obyxyLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTplfSk6b1tyXT1lLGk9KG8scik9Pntmb3IodmFyIGUgaW4gcnx8KHI9e30pKWMuY2FsbChyLGUpJiZDKG8sZSxyW2VdKTtpZihtKWZvcih2YXIgZSBvZiBtKHIpKWsuY2FsbChyLGUpJiZDKG8sZSxyW2VdKTtyZXR1cm4gb307dmFyIFM9KG8scik9Pntmb3IodmFyIGUgaW4gciluKG8sZSx7Z2V0OnJbZV0sZW51bWVyYWJsZTohMH0pfSxmPShvLHIsZSxzKT0+e2lmKHImJnR5cGVvZiByPT1cIm9iamVjdFwifHx0eXBlb2Ygcj09XCJmdW5jdGlvblwiKWZvcihsZXQgdCBvZiBhKHIpKSFjLmNhbGwobyx0KSYmdCE9PWUmJm4obyx0LHtnZXQ6KCk9PnJbdF0sZW51bWVyYWJsZTohKHM9dyhyLHQpKXx8cy5lbnVtZXJhYmxlfSk7cmV0dXJuIG99O3ZhciBnPShvLHIsZSk9PihlPW8hPW51bGw/dShoKG8pKTp7fSxmKHJ8fCFvfHwhby5fX2VzTW9kdWxlP24oZSxcImRlZmF1bHRcIix7dmFsdWU6byxlbnVtZXJhYmxlOiEwfSk6ZSxvKSkseD1vPT5mKG4oe30sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksbyk7dmFyIEw9e307UyhMLHtkZWZhdWx0OigpPT52fSk7bW9kdWxlLmV4cG9ydHM9eChMKTt2YXIgcD1nKHJlcXVpcmUoXCJyZWFjdFwiKSksZD1yZXF1aXJlKFwicmVhY3RcIiksbD1yZXF1aXJlKFwiLi4vSWNvbm9pckNvbnRleHQuanNcIik7Y29uc3QgRz0obyxyKT0+e2NvbnN0IGU9cC51c2VDb250ZXh0KGwuSWNvbm9pckNvbnRleHQpLHM9aShpKHt9LGUpLG8pO3JldHVybiBwLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIixpKHt3aWR0aDpcIjEuNWVtXCIsaGVpZ2h0OlwiMS41ZW1cIix2aWV3Qm94OlwiMCAwIDI0IDI0XCIsc3Ryb2tlV2lkdGg6MS41LGZpbGw6XCJub25lXCIseG1sbnM6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLGNvbG9yOlwiY3VycmVudENvbG9yXCIscmVmOnJ9LHMpLHAuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk0xOS41IDhDMTUuNSA4IDEzIDggOSA4QzkgOCA5IDggOSA4QzkgOCA0IDggNCAxMi43MDU5QzQgMTggOSAxOCA5IDE4QzEyLjQyODYgMTggMTQuMjg1NyAxOCAxNy43MTQzIDE4XCIsc3Ryb2tlOlwiY3VycmVudENvbG9yXCIsc3Ryb2tlTGluZWNhcDpcInJvdW5kXCIsc3Ryb2tlTGluZWpvaW46XCJyb3VuZFwifSkscC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwiTTE2LjUgMTEuNUMxNy44NjY4IDEwLjEzMzIgMTguNjMzMiA5LjM2NjgzIDIwIDhDMTguNjMzMiA2LjYzMzE3IDE3Ljg2NjggNS44NjY4MyAxNi41IDQuNVwiLHN0cm9rZTpcImN1cnJlbnRDb2xvclwiLHN0cm9rZUxpbmVjYXA6XCJyb3VuZFwiLHN0cm9rZUxpbmVqb2luOlwicm91bmRcIn0pKX0sVj0oMCxkLmZvcndhcmRSZWYpKEcpO3ZhciB2PVY7XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxZQUFZOztBQUFDLElBQUlBLENBQUMsR0FBQ0MsTUFBTSxDQUFDQyxNQUFNO0FBQUMsSUFBSUMsQ0FBQyxHQUFDRixNQUFNLENBQUNHLGNBQWM7QUFBQyxJQUFJQyxDQUFDLEdBQUNKLE1BQU0sQ0FBQ0ssd0JBQXdCO0FBQUMsSUFBSUMsQ0FBQyxHQUFDTixNQUFNLENBQUNPLG1CQUFtQjtFQUFDQyxDQUFDLEdBQUNSLE1BQU0sQ0FBQ1MscUJBQXFCO0VBQUNDLENBQUMsR0FBQ1YsTUFBTSxDQUFDVyxjQUFjO0VBQUNDLENBQUMsR0FBQ1osTUFBTSxDQUFDYSxTQUFTLENBQUNDLGNBQWM7RUFBQ0MsQ0FBQyxHQUFDZixNQUFNLENBQUNhLFNBQVMsQ0FBQ0csb0JBQW9CO0FBQUMsSUFBSUMsQ0FBQyxHQUFDQSxDQUFDQyxDQUFDLEVBQUNDLENBQUMsRUFB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SUFBSWlCLENBQUMsR0FBQyxDQUFDLENBQUM7QUFBQ1IsQ0FBQyxDQUFDUSxDQUFDLEVBQUM7RUFBQ0MsT0FBTyxFQUFDQSxDQUFBLEtBQUlDO0FBQUMsQ0FBQyxDQUFDO0FBQUNDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFDTCxDQUFDLENBQUNDLENBQUMsQ0FBQztBQUFDLElBQUlLLENBQUMsR0FBQ1IsQ0FBQyxDQUFDUyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7RUFBQ0MsQ0FBQyxHQUFDRCxPQUFPLENBQUMsT0FBTyxDQUFDO0VBQUNFLENBQUMsR0FBQ0YsT0FBTyxDQUFDLHNCQUFzQixDQUFDO0FBQUMsTUFBTUcsQ0FBQyxHQUFDQSxDQUFDMUIsQ0FBQyxFQUFDQyxDQUFDLEtBQUc7SUFBQyxNQUFNQyxDQUFDLEdBQUNvQixDQUFDLENBQUNLLFVBQVUsQ0FBQ0YsQ0FBQyxDQUFDRyxjQUFjLENBQUM7TUFBQ2hCLENBQUMsR0FBQ0wsQ0FBQyxDQUFDQSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUNMLENBQUMsQ0FBQyxFQUFDRixDQUFDLENBQUM7SUFBQyxPQUFPc0IsQ0FBQyxDQUFDTyxhQUFhLENBQUMsS0FBSyxFQUFDdEIsQ0FBQyxDQUFDO01BQUN1QixLQUFLLEVBQUMsT0FBTztNQUFDQyxNQUFNLEVBQUMsT0FBTztNQUFDQyxPQUFPLEVBQUMsV0FBVztNQUFDQyxXQUFXLEVBQUMsR0FBRztNQUFDQyxJQUFJLEVBQUMsTUFBTTtNQUFDQyxLQUFLLEVBQUMsNEJBQTRCO01BQUNDLEtBQUssRUFBQyxjQUFjO01BQUNDLEdBQUcsRUFBQ3BDO0lBQUMsQ0FBQyxFQUFDVyxDQUFDLENBQUMsRUFBQ1UsQ0FBQyxDQUFDTyxhQUFhLENBQUMsTUFBTSxFQUFDO01BQUNMLENBQUMsRUFBQyx1R0FBdUc7TUFBQ2MsTUFBTSxFQUFDLGNBQWM7TUFBQ0MsYUFBYSxFQUFDLE9BQU87TUFBQ0MsY0FBYyxFQUFDO0lBQU8sQ0FBQyxDQUFDLEVBQUNsQixDQUFDLENBQUNPLGFBQWEsQ0FBQyxNQUFNLEVBQUM7TUFBQ0wsQ0FBQyxFQUFDLDBGQUEwRjtNQUFDYyxNQUFNLEVBQUMsY0FBYztNQUFDQyxhQUFhLEVBQUMsT0FBTztNQUFDQyxjQUFjLEVBQUM7SUFBTyxDQUFDLENBQUMsQ0FBQztFQUFBLENBQUM7RUFBQ0MsQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFDakIsQ0FBQyxDQUFDa0IsVUFBVSxFQUFFaEIsQ0FBQyxDQUFDO0FBQUMsSUFBSVAsQ0FBQyxHQUFDc0IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==