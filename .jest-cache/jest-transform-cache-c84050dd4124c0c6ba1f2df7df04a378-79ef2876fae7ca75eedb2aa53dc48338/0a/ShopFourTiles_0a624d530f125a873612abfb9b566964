e479a384c4a96a17af1c49acda844843
"use strict";
"use client";

var h = Object.create;
var n = Object.defineProperty;
var u = Object.getOwnPropertyDescriptor;
var c = Object.getOwnPropertyNames,
  l = Object.getOwnPropertySymbols,
  k = Object.getPrototypeOf,
  i = Object.prototype.hasOwnProperty,
  w = Object.prototype.propertyIsEnumerable;
var m = (r, o, t) => o in r ? n(r, o, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: t
  }) : r[o] = t,
  p = (r, o) => {
    for (var t in o || (o = {})) i.call(o, t) && m(r, t, o[t]);
    if (l) for (var t of l(o)) w.call(o, t) && m(r, t, o[t]);
    return r;
  };
var M = (r, o) => {
    for (var t in o) n(r, t, {
      get: o[t],
      enumerable: !0
    });
  },
  f = (r, o, t, s) => {
    if (o && typeof o == "object" || typeof o == "function") for (let C of c(o)) !i.call(r, C) && C !== t && n(r, C, {
      get: () => o[C],
      enumerable: !(s = u(o, C)) || s.enumerable
    });
    return r;
  };
var S = (r, o, t) => (t = r != null ? h(k(r)) : {}, f(o || !r || !r.__esModule ? n(t, "default", {
    value: r,
    enumerable: !0
  }) : t, r)),
  g = r => f(n({}, "__esModule", {
    value: !0
  }), r);
var L = {};
M(L, {
  default: () => H
});
module.exports = g(L);
var e = S(require("react")),
  V = require("react"),
  d = require("../IconoirContext.js");
const x = (r, o) => {
    const t = e.useContext(d.IconoirContext),
      s = p(p({}, t), r);
    return e.createElement("svg", p({
      width: "1.5em",
      height: "1.5em",
      strokeWidth: 1.5,
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      color: "currentColor",
      ref: o
    }, s), e.createElement("path", {
      d: "M20.485 3H16.4933L16.9933 8C16.9933 8 17.9933 9 19.4933 9C20.5703 9 21.3036 8.48445 21.6316 8.1937C21.7623 8.07782 21.8101 7.90091 21.7814 7.72861L21.0768 3.50136C21.0286 3.21205 20.7783 3 20.485 3Z",
      stroke: "currentColor"
    }), e.createElement("path", {
      d: "M16.4933 3L16.9933 8C16.9933 8 15.9933 9 14.4933 9C12.9933 9 11.9933 8 11.9933 8V3H16.4933Z",
      stroke: "currentColor"
    }), e.createElement("path", {
      d: "M11.9933 3V8C11.9933 8 10.9933 9 9.49329 9C7.99329 9 6.99329 8 6.99329 8L7.49329 3H11.9933Z",
      stroke: "currentColor"
    }), e.createElement("path", {
      d: "M7.49331 3H3.50158C3.20828 3 2.95797 3.21205 2.90975 3.50136L2.2052 7.72862C2.17649 7.90091 2.22432 8.07782 2.35502 8.1937C2.68294 8.48445 3.41626 9 4.49329 9C5.99329 9 6.99331 8 6.99331 8L7.49331 3Z",
      stroke: "currentColor"
    }), e.createElement("path", {
      d: "M3 9V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V9",
      stroke: "currentColor"
    }), e.createElement("path", {
      d: "M14.8333 21V15C14.8333 13.8954 13.9379 13 12.8333 13H10.8333C9.72874 13 8.83331 13.8954 8.83331 15V21",
      stroke: "currentColor",
      strokeMiterlimit: 16
    }));
  },
  G = (0, V.forwardRef)(x);
var H = G;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,