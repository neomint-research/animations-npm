82567ae599797a46c2d33a078ac9a93c
"use strict";
"use client";

var u = Object.create;
var n = Object.defineProperty;
var w = Object.getOwnPropertyDescriptor;
var V = Object.getOwnPropertyNames,
  p = Object.getOwnPropertySymbols,
  v = Object.getPrototypeOf,
  C = Object.prototype.hasOwnProperty,
  S = Object.prototype.propertyIsEnumerable;
var s = (o, e, r) => e in o ? n(o, e, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: r
  }) : o[e] = r,
  f = (o, e) => {
    for (var r in e || (e = {})) C.call(e, r) && s(o, r, e[r]);
    if (p) for (var r of p(e)) S.call(e, r) && s(o, r, e[r]);
    return o;
  };
var g = (o, e) => {
    for (var r in e) n(o, r, {
      get: e[r],
      enumerable: !0
    });
  },
  i = (o, e, r, l) => {
    if (e && typeof e == "object" || typeof e == "function") for (let t of V(e)) !C.call(o, t) && t !== r && n(o, t, {
      get: () => e[t],
      enumerable: !(l = w(e, t)) || l.enumerable
    });
    return o;
  };
var x = (o, e, r) => (r = o != null ? u(v(o)) : {}, i(e || !o || !o.__esModule ? n(r, "default", {
    value: o,
    enumerable: !0
  }) : r, o)),
  G = o => i(n({}, "__esModule", {
    value: !0
  }), o);
var L = {};
g(L, {
  default: () => R
});
module.exports = G(L);
var m = x(require("react")),
  c = require("react"),
  d = require("../IconoirContext.js");
const a = (o, e) => {
    const r = m.useContext(d.IconoirContext),
      l = f(f({}, r), o);
    return m.createElement("svg", f({
      width: "1.5em",
      height: "1.5em",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      color: "currentColor",
      ref: e
    }, l), m.createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 4.25C2.48122 4.25 1.25 5.48122 1.25 7V17C1.25 18.5188 2.48122 19.75 4 19.75H20C21.5188 19.75 22.75 18.5188 22.75 17V7C22.75 5.48122 21.5188 4.25 20 4.25H4ZM7.4301 8.38558C7.09076 8.14804 6.62311 8.23057 6.38558 8.5699C6.14804 8.90924 6.23057 9.37689 6.5699 9.61442L11.5699 13.1144C11.8281 13.2952 12.1719 13.2952 12.4301 13.1144L17.4301 9.61442C17.7694 9.37689 17.852 8.90924 17.6144 8.5699C17.3769 8.23057 16.9092 8.14804 16.5699 8.38558L12 11.5845L7.4301 8.38558Z",
      fill: "currentColor"
    }));
  },
  h = (0, c.forwardRef)(a);
var R = h;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1IiwiT2JqZWN0IiwiY3JlYXRlIiwibiIsImRlZmluZVByb3BlcnR5IiwidyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlYiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwicCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInYiLCJnZXRQcm90b3R5cGVPZiIsIkMiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsIlMiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInMiLCJvIiwiZSIsInIiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsImYiLCJjYWxsIiwiZyIsImdldCIsImkiLCJsIiwidCIsIngiLCJfX2VzTW9kdWxlIiwiRyIsIkwiLCJkZWZhdWx0IiwiUiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtIiwicmVxdWlyZSIsImMiLCJkIiwiYSIsInVzZUNvbnRleHQiLCJJY29ub2lyQ29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwieG1sbnMiLCJjb2xvciIsInJlZiIsImZpbGxSdWxlIiwiY2xpcFJ1bGUiLCJoIiwiZm9yd2FyZFJlZiJdLCJzb3VyY2VzIjpbIk1haWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7dmFyIHU9T2JqZWN0LmNyZWF0ZTt2YXIgbj1PYmplY3QuZGVmaW5lUHJvcGVydHk7dmFyIHc9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjt2YXIgVj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyxwPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsdj1PYmplY3QuZ2V0UHJvdG90eXBlT2YsQz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFM9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTt2YXIgcz0obyxlLHIpPT5lIGluIG8/bihvLGUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnJ9KTpvW2VdPXIsZj0obyxlKT0+e2Zvcih2YXIgciBpbiBlfHwoZT17fSkpQy5jYWxsKGUscikmJnMobyxyLGVbcl0pO2lmKHApZm9yKHZhciByIG9mIHAoZSkpUy5jYWxsKGUscikmJnMobyxyLGVbcl0pO3JldHVybiBvfTt2YXIgZz0obyxlKT0+e2Zvcih2YXIgciBpbiBlKW4obyxyLHtnZXQ6ZVtyXSxlbnVtZXJhYmxlOiEwfSl9LGk9KG8sZSxyLGwpPT57aWYoZSYmdHlwZW9mIGU9PVwib2JqZWN0XCJ8fHR5cGVvZiBlPT1cImZ1bmN0aW9uXCIpZm9yKGxldCB0IG9mIFYoZSkpIUMuY2FsbChvLHQpJiZ0IT09ciYmbihvLHQse2dldDooKT0+ZVt0XSxlbnVtZXJhYmxlOiEobD13KGUsdCkpfHxsLmVudW1lcmFibGV9KTtyZXR1cm4gb307dmFyIHg9KG8sZSxyKT0+KHI9byE9bnVsbD91KHYobykpOnt9LGkoZXx8IW98fCFvLl9fZXNNb2R1bGU/bihyLFwiZGVmYXVsdFwiLHt2YWx1ZTpvLGVudW1lcmFibGU6ITB9KTpyLG8pKSxHPW89Pmkobih7fSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxvKTt2YXIgTD17fTtnKEwse2RlZmF1bHQ6KCk9PlJ9KTttb2R1bGUuZXhwb3J0cz1HKEwpO3ZhciBtPXgocmVxdWlyZShcInJlYWN0XCIpKSxjPXJlcXVpcmUoXCJyZWFjdFwiKSxkPXJlcXVpcmUoXCIuLi9JY29ub2lyQ29udGV4dC5qc1wiKTtjb25zdCBhPShvLGUpPT57Y29uc3Qgcj1tLnVzZUNvbnRleHQoZC5JY29ub2lyQ29udGV4dCksbD1mKGYoe30sciksbyk7cmV0dXJuIG0uY3JlYXRlRWxlbWVudChcInN2Z1wiLGYoe3dpZHRoOlwiMS41ZW1cIixoZWlnaHQ6XCIxLjVlbVwiLHZpZXdCb3g6XCIwIDAgMjQgMjRcIixmaWxsOlwibm9uZVwiLHhtbG5zOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixjb2xvcjpcImN1cnJlbnRDb2xvclwiLHJlZjplfSxsKSxtLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2ZpbGxSdWxlOlwiZXZlbm9kZFwiLGNsaXBSdWxlOlwiZXZlbm9kZFwiLGQ6XCJNNCA0LjI1QzIuNDgxMjIgNC4yNSAxLjI1IDUuNDgxMjIgMS4yNSA3VjE3QzEuMjUgMTguNTE4OCAyLjQ4MTIyIDE5Ljc1IDQgMTkuNzVIMjBDMjEuNTE4OCAxOS43NSAyMi43NSAxOC41MTg4IDIyLjc1IDE3VjdDMjIuNzUgNS40ODEyMiAyMS41MTg4IDQuMjUgMjAgNC4yNUg0Wk03LjQzMDEgOC4zODU1OEM3LjA5MDc2IDguMTQ4MDQgNi42MjMxMSA4LjIzMDU3IDYuMzg1NTggOC41Njk5QzYuMTQ4MDQgOC45MDkyNCA2LjIzMDU3IDkuMzc2ODkgNi41Njk5IDkuNjE0NDJMMTEuNTY5OSAxMy4xMTQ0QzExLjgyODEgMTMuMjk1MiAxMi4xNzE5IDEzLjI5NTIgMTIuNDMwMSAxMy4xMTQ0TDE3LjQzMDEgOS42MTQ0MkMxNy43Njk0IDkuMzc2ODkgMTcuODUyIDguOTA5MjQgMTcuNjE0NCA4LjU2OTlDMTcuMzc2OSA4LjIzMDU3IDE2LjkwOTIgOC4xNDgwNCAxNi41Njk5IDguMzg1NThMMTIgMTEuNTg0NUw3LjQzMDEgOC4zODU1OFpcIixmaWxsOlwiY3VycmVudENvbG9yXCJ9KSl9LGg9KDAsYy5mb3J3YXJkUmVmKShhKTt2YXIgUj1oO1xuIl0sIm1hcHBpbmdzIjoiO0FBQUEsWUFBWTs7QUFBQyxJQUFJQSxDQUFDLEdBQUNDLE1BQU0sQ0FBQ0MsTUFBTTtBQUFDLElBQUlDLENBQUMsR0FBQ0YsTUFBTSxDQUFDRyxjQUFjO0FBQUMsSUFBSUMsQ0FBQyxHQUFDSixNQUFNLENBQUNLLHdCQUF3QjtBQUFDLElBQUlDLENBQUMsR0FBQ04sTUFBTSxDQUFDTyxtQkFBbUI7RUFBQ0MsQ0FBQyxHQUFDUixNQUFNLENBQUNTLHFCQUFxQjtFQUFDQyxDQUFDLEdBQUNWLE1BQU0sQ0FBQ1csY0FBYztFQUFDQyxDQUFDLEdBQUNaLE1BQU0sQ0FB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LElBQUVXLENBQUMsQ0FBQzNCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxZQUFZLEVBQUM7SUFBQ3NCLEtBQUssRUFBQyxDQUFDO0VBQUMsQ0FBQyxDQUFDLEVBQUNOLENBQUMsQ0FBQztBQUFDLElBQUlpQixDQUFDLEdBQUMsQ0FBQyxDQUFDO0FBQUNSLENBQUMsQ0FBQ1EsQ0FBQyxFQUFDO0VBQUNDLE9BQU8sRUFBQ0EsQ0FBQSxLQUFJQztBQUFDLENBQUMsQ0FBQztBQUFDQyxNQUFNLENBQUNDLE9BQU8sR0FBQ0wsQ0FBQyxDQUFDQyxDQUFDLENBQUM7QUFBQyxJQUFJSyxDQUFDLEdBQUNSLENBQUMsQ0FBQ1MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0VBQUNDLENBQUMsR0FBQ0QsT0FBTyxDQUFDLE9BQU8sQ0FBQztFQUFDRSxDQUFDLEdBQUNGLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQztBQUFDLE1BQU1HLENBQUMsR0FBQ0EsQ0FBQzFCLENBQUMsRUFBQ0MsQ0FBQyxLQUFHO0lBQUMsTUFBTUMsQ0FBQyxHQUFDb0IsQ0FBQyxDQUFDSyxVQUFVLENBQUNGLENBQUMsQ0FBQ0csY0FBYyxDQUFDO01BQUNoQixDQUFDLEdBQUNMLENBQUMsQ0FBQ0EsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDTCxDQUFDLENBQUMsRUFBQ0YsQ0FBQyxDQUFDO0lBQUMsT0FBT3NCLENBQUMsQ0FBQ08sYUFBYSxDQUFDLEtBQUssRUFBQ3RCLENBQUMsQ0FBQztNQUFDdUIsS0FBSyxFQUFDLE9BQU87TUFBQ0MsTUFBTSxFQUFDLE9BQU87TUFBQ0MsT0FBTyxFQUFDLFdBQVc7TUFBQ0MsSUFBSSxFQUFDLE1BQU07TUFBQ0MsS0FBSyxFQUFDLDRCQUE0QjtNQUFDQyxLQUFLLEVBQUMsY0FBYztNQUFDQyxHQUFHLEVBQUNuQztJQUFDLENBQUMsRUFBQ1csQ0FBQyxDQUFDLEVBQUNVLENBQUMsQ0FBQ08sYUFBYSxDQUFDLE1BQU0sRUFBQztNQUFDUSxRQUFRLEVBQUMsU0FBUztNQUFDQyxRQUFRLEVBQUMsU0FBUztNQUFDYixDQUFDLEVBQUMsc2RBQXNkO01BQUNRLElBQUksRUFBQztJQUFjLENBQUMsQ0FBQyxDQUFDO0VBQUEsQ0FBQztFQUFDTSxDQUFDLEdBQUMsQ0FBQyxDQUFDLEVBQUNmLENBQUMsQ0FBQ2dCLFVBQVUsRUFBRWQsQ0FBQyxDQUFDO0FBQUMsSUFBSVAsQ0FBQyxHQUFDb0IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==