84ee2cf7b87db8d4bb34b782fc550440
"use strict";
"use client";

var V = Object.create;
var n = Object.defineProperty;
var S = Object.getOwnPropertyDescriptor;
var d = Object.getOwnPropertyNames,
  p = Object.getOwnPropertySymbols,
  g = Object.getPrototypeOf,
  i = Object.prototype.hasOwnProperty,
  h = Object.prototype.propertyIsEnumerable;
var f = (o, t, r) => t in o ? n(o, t, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: r
  }) : o[t] = r,
  C = (o, t) => {
    for (var r in t || (t = {})) i.call(t, r) && f(o, r, t[r]);
    if (p) for (var r of p(t)) h.call(t, r) && f(o, r, t[r]);
    return o;
  };
var u = (o, t) => {
    for (var r in t) n(o, r, {
      get: t[r],
      enumerable: !0
    });
  },
  c = (o, t, r, s) => {
    if (t && typeof t == "object" || typeof t == "function") for (let e of d(t)) !i.call(o, e) && e !== r && n(o, e, {
      get: () => t[e],
      enumerable: !(s = S(t, e)) || s.enumerable
    });
    return o;
  };
var x = (o, t, r) => (r = o != null ? V(g(o)) : {}, c(t || !o || !o.__esModule ? n(r, "default", {
    value: o,
    enumerable: !0
  }) : r, o)),
  G = o => c(n({}, "__esModule", {
    value: !0
  }), o);
var k = {};
u(k, {
  default: () => R
});
module.exports = G(k);
var m = x(require("react")),
  l = require("react"),
  w = require("../IconoirContext.js");
const a = (o, t) => {
    const r = m.useContext(w.IconoirContext),
      s = C(C({}, r), o);
    return m.createElement("svg", C({
      width: "1.5em",
      height: "1.5em",
      strokeWidth: 1.5,
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      color: "currentColor",
      ref: t
    }, s), m.createElement("path", {
      d: "M1 4.6C1 4.26863 1.26863 4 1.6 4H22.4C22.7314 4 23 4.26863 23 4.6V8.51175C23 8.79612 22.8011 9.04191 22.5243 9.10697C21.4716 9.35435 18.8886 10.0207 17 11C13.5564 12.7856 13.0695 17.6549 13.0068 19.3822C12.9945 19.7209 12.7194 20 12.3805 20H11.6195C11.2806 20 11.0055 19.7209 10.9932 19.3822C10.9305 17.6549 10.4436 12.7856 7 11C5.11136 10.0207 2.52843 9.35435 1.47571 9.10697C1.19887 9.04191 1 8.79612 1 8.51175V4.6Z",
      stroke: "currentColor"
    }));
  },
  v = (0, l.forwardRef)(a);
var R = v;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWIiwiT2JqZWN0IiwiY3JlYXRlIiwibiIsImRlZmluZVByb3BlcnR5IiwiUyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImQiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwicCIsImdldE93blByb3BlcnR5U3ltYm9scyIsImciLCJnZXRQcm90b3R5cGVPZiIsImkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImYiLCJvIiwidCIsInIiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIkMiLCJjYWxsIiwidSIsImdldCIsImMiLCJzIiwiZSIsIngiLCJfX2VzTW9kdWxlIiwiRyIsImsiLCJkZWZhdWx0IiwiUiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtIiwicmVxdWlyZSIsImwiLCJ3IiwiYSIsInVzZUNvbnRleHQiLCJJY29ub2lyQ29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInN0cm9rZVdpZHRoIiwidmlld0JveCIsImZpbGwiLCJ4bWxucyIsImNvbG9yIiwicmVmIiwic3Ryb2tlIiwidiIsImZvcndhcmRSZWYiXSwic291cmNlcyI6WyJTbGlwcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjt2YXIgVj1PYmplY3QuY3JlYXRlO3ZhciBuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgUz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3ZhciBkPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLHA9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxnPU9iamVjdC5nZXRQcm90b3R5cGVPZixpPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksaD1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO3ZhciBmPShvLHQscik9PnQgaW4gbz9uKG8sdCx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6cn0pOm9bdF09cixDPShvLHQpPT57Zm9yKHZhciByIGluIHR8fCh0PXt9KSlpLmNhbGwodCxyKSYmZihvLHIsdFtyXSk7aWYocClmb3IodmFyIHIgb2YgcCh0KSloLmNhbGwodCxyKSYmZihvLHIsdFtyXSk7cmV0dXJuIG99O3ZhciB1PShvLHQpPT57Zm9yKHZhciByIGluIHQpbihvLHIse2dldDp0W3JdLGVudW1lcmFibGU6ITB9KX0sYz0obyx0LHIscyk9PntpZih0JiZ0eXBlb2YgdD09XCJvYmplY3RcInx8dHlwZW9mIHQ9PVwiZnVuY3Rpb25cIilmb3IobGV0IGUgb2YgZCh0KSkhaS5jYWxsKG8sZSkmJmUhPT1yJiZuKG8sZSx7Z2V0OigpPT50W2VdLGVudW1lcmFibGU6IShzPVModCxlKSl8fHMuZW51bWVyYWJsZX0pO3JldHVybiBvfTt2YXIgeD0obyx0LHIpPT4ocj1vIT1udWxsP1YoZyhvKSk6e30sYyh0fHwhb3x8IW8uX19lc01vZHVsZT9uKHIsXCJkZWZhdWx0XCIse3ZhbHVlOm8sZW51bWVyYWJsZTohMH0pOnIsbykpLEc9bz0+YyhuKHt9LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLG8pO3ZhciBrPXt9O3Uoayx7ZGVmYXVsdDooKT0+Un0pO21vZHVsZS5leHBvcnRzPUcoayk7dmFyIG09eChyZXF1aXJlKFwicmVhY3RcIikpLGw9cmVxdWlyZShcInJlYWN0XCIpLHc9cmVxdWlyZShcIi4uL0ljb25vaXJDb250ZXh0LmpzXCIpO2NvbnN0IGE9KG8sdCk9Pntjb25zdCByPW0udXNlQ29udGV4dCh3Lkljb25vaXJDb250ZXh0KSxzPUMoQyh7fSxyKSxvKTtyZXR1cm4gbS5jcmVhdGVFbGVtZW50KFwic3ZnXCIsQyh7d2lkdGg6XCIxLjVlbVwiLGhlaWdodDpcIjEuNWVtXCIsc3Ryb2tlV2lkdGg6MS41LHZpZXdCb3g6XCIwIDAgMjQgMjRcIixmaWxsOlwibm9uZVwiLHhtbG5zOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixjb2xvcjpcImN1cnJlbnRDb2xvclwiLHJlZjp0fSxzKSxtLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNMSA0LjZDMSA0LjI2ODYzIDEuMjY4NjMgNCAxLjYgNEgyMi40QzIyLjczMTQgNCAyMyA0LjI2ODYzIDIzIDQuNlY4LjUxMTc1QzIzIDguNzk2MTIgMjIuODAxMSA5LjA0MTkxIDIyLjUyNDMgOS4xMDY5N0MyMS40NzE2IDkuMzU0MzUgMTguODg4NiAxMC4wMjA3IDE3IDExQzEzLjU1NjQgMTIuNzg1NiAxMy4wNjk1IDE3LjY1NDkgMTMuMDA2OCAxOS4zODIyQzEyLjk5NDUgMTkuNzIwOSAxMi43MTk0IDIwIDEyLjM4MDUgMjBIMTEuNjE5NUMxMS4yODA2IDIwIDExLjAwNTUgMTkuNzIwOSAxMC45OTMyIDE5LjM4MjJDMTAuOTMwNSAxNy42NTQ5IDEwLjQ0MzYgMTIuNzg1NiA3IDExQzUuMTExMzYgMTAuMDIwNyAyLjUyODQzIDkuMzU0MzUgMS40NzU3MSA5LjEwNjk3QzEuMTk4ODcgOS4wNDE5MSAxIDguNzk2MTIgMSA4LjUxMTc1VjQuNlpcIixzdHJva2U6XCJjdXJyZW50Q29sb3JcIn0pKX0sdj0oMCxsLmZvcndhcmRSZWYpKGEpO3ZhciBSPXY7XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxZQUFZOztBQUFDLElBQUlBLENBQUMsR0FBQ0MsTUFBTSxDQUFDQyxNQUFNO0FBQUMsSUFBSUMsQ0FBQyxHQUFDRixNQUFNLENBQUNHLGNBQWM7QUFBQyxJQUFJQyxDQUFDLEdBQUNKLE1BQU0sQ0FBQ0ssd0JBQXdCO0FBQUMsSUFBSUMsQ0FBQyxHQUFDTixNQUFNLENBQUNPLG1CQUFtQjtFQUFDQyxDQUFDLEdBQUNSLE1BQU0sQ0FBQ1MscUJBQXFCO0VBQUNDLENBQUMsR0FBQ1YsTUFBTSxDQUFDVyxjQUFjO0VBQUNDLENBQUMsR0FBQ1osTUFBTSxDQUFDYSxTQUFTLENBQUNDLGNBQWM7RUFBQ0MsQ0FBQyxHQUFDZixNQUFNLENBQUNhLFNBQVMsQ0FBQ0csb0JBQW9CO0FBQUMsSUFB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