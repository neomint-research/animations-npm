fcad95ee5f69d5870387b222969cbcac
"use strict";
"use client";

var C = Object.create;
var n = Object.defineProperty;
var h = Object.getOwnPropertyDescriptor;
var k = Object.getOwnPropertyNames,
  m = Object.getOwnPropertySymbols,
  w = Object.getPrototypeOf,
  d = Object.prototype.hasOwnProperty,
  V = Object.prototype.propertyIsEnumerable;
var c = (o, r, t) => r in o ? n(o, r, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: t
  }) : o[r] = t,
  p = (o, r) => {
    for (var t in r || (r = {})) d.call(r, t) && c(o, t, r[t]);
    if (m) for (var t of m(r)) V.call(r, t) && c(o, t, r[t]);
    return o;
  };
var a = (o, r) => {
    for (var t in r) n(o, t, {
      get: r[t],
      enumerable: !0
    });
  },
  f = (o, r, t, i) => {
    if (r && typeof r == "object" || typeof r == "function") for (let e of k(r)) !d.call(o, e) && e !== t && n(o, e, {
      get: () => r[e],
      enumerable: !(i = h(r, e)) || i.enumerable
    });
    return o;
  };
var L = (o, r, t) => (t = o != null ? C(w(o)) : {}, f(r || !o || !o.__esModule ? n(t, "default", {
    value: o,
    enumerable: !0
  }) : t, o)),
  S = o => f(n({}, "__esModule", {
    value: !0
  }), o);
var v = {};
a(v, {
  default: () => G
});
module.exports = S(v);
var s = L(require("react")),
  l = require("react"),
  u = require("../IconoirContext.js");
const g = (o, r) => {
    const t = s.useContext(u.IconoirContext),
      i = p(p({}, t), o);
    return s.createElement("svg", p({
      width: "1.5em",
      height: "1.5em",
      strokeWidth: 1.5,
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      color: "currentColor",
      ref: r
    }, i), s.createElement("path", {
      d: "M7 22L17 22",
      stroke: "currentColor",
      strokeLinecap: "round",
      strokeLinejoin: "round"
    }), s.createElement("path", {
      d: "M2 17V4C2 2.89543 2.89543 2 4 2H20C21.1046 2 22 2.89543 22 4V17C22 18.1046 21.1046 19 20 19H4C2.89543 19 2 18.1046 2 17Z",
      stroke: "currentColor"
    }), s.createElement("path", {
      d: "M9 10.5L11 12.5L15 8.5",
      stroke: "currentColor",
      strokeLinecap: "round",
      strokeLinejoin: "round"
    }));
  },
  x = (0, l.forwardRef)(g);
var G = x;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDIiwiT2JqZWN0IiwiY3JlYXRlIiwibiIsImRlZmluZVByb3BlcnR5IiwiaCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImsiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwibSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInciLCJnZXRQcm90b3R5cGVPZiIsImQiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsIlYiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImMiLCJvIiwiciIsInQiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsInAiLCJjYWxsIiwiYSIsImdldCIsImYiLCJpIiwiZSIsIkwiLCJfX2VzTW9kdWxlIiwiUyIsInYiLCJkZWZhdWx0IiwiRyIsIm1vZHVsZSIsImV4cG9ydHMiLCJzIiwicmVxdWlyZSIsImwiLCJ1IiwiZyIsInVzZUNvbnRleHQiLCJJY29ub2lyQ29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInN0cm9rZVdpZHRoIiwidmlld0JveCIsImZpbGwiLCJ4bWxucyIsImNvbG9yIiwicmVmIiwic3Ryb2tlIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwieCIsImZvcndhcmRSZWYiXSwic291cmNlcyI6WyJQY0NoZWNrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO3ZhciBDPU9iamVjdC5jcmVhdGU7dmFyIG49T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciBoPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dmFyIGs9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMsbT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLHc9T2JqZWN0LmdldFByb3RvdHlwZU9mLGQ9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxWPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7dmFyIGM9KG8scix0KT0+ciBpbiBvP24obyxyLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTp0fSk6b1tyXT10LHA9KG8scik9Pntmb3IodmFyIHQgaW4gcnx8KHI9e30pKWQuY2FsbChyLHQpJiZjKG8sdCxyW3RdKTtpZihtKWZvcih2YXIgdCBvZiBtKHIpKVYuY2FsbChyLHQpJiZjKG8sdCxyW3RdKTtyZXR1cm4gb307dmFyIGE9KG8scik9Pntmb3IodmFyIHQgaW4gciluKG8sdCx7Z2V0OnJbdF0sZW51bWVyYWJsZTohMH0pfSxmPShvLHIsdCxpKT0+e2lmKHImJnR5cGVvZiByPT1cIm9iamVjdFwifHx0eXBlb2Ygcj09XCJmdW5jdGlvblwiKWZvcihsZXQgZSBvZiBrKHIpKSFkLmNhbGwobyxlKSYmZSE9PXQmJm4obyxlLHtnZXQ6KCk9PnJbZV0sZW51bWVyYWJsZTohKGk9aChyLGUpKXx8aS5lbnVtZXJhYmxlfSk7cmV0dXJuIG99O3ZhciBMPShvLHIsdCk9Pih0PW8hPW51bGw/Qyh3KG8pKTp7fSxmKHJ8fCFvfHwhby5fX2VzTW9kdWxlP24odCxcImRlZmF1bHRcIix7dmFsdWU6byxlbnVtZXJhYmxlOiEwfSk6dCxvKSksUz1vPT5mKG4oe30sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksbyk7dmFyIHY9e307YSh2LHtkZWZhdWx0OigpPT5HfSk7bW9kdWxlLmV4cG9ydHM9Uyh2KTt2YXIgcz1MKHJlcXVpcmUoXCJyZWFjdFwiKSksbD1yZXF1aXJlKFwicmVhY3RcIiksdT1yZXF1aXJlKFwiLi4vSWNvbm9pckNvbnRleHQuanNcIik7Y29uc3QgZz0obyxyKT0+e2NvbnN0IHQ9cy51c2VDb250ZXh0KHUuSWNvbm9pckNvbnRleHQpLGk9cChwKHt9LHQpLG8pO3JldHVybiBzLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIixwKHt3aWR0aDpcIjEuNWVtXCIsaGVpZ2h0OlwiMS41ZW1cIixzdHJva2VXaWR0aDoxLjUsdmlld0JveDpcIjAgMCAyNCAyNFwiLGZpbGw6XCJub25lXCIseG1sbnM6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLGNvbG9yOlwiY3VycmVudENvbG9yXCIscmVmOnJ9LGkpLHMuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk03IDIyTDE3IDIyXCIsc3Ryb2tlOlwiY3VycmVudENvbG9yXCIsc3Ryb2tlTGluZWNhcDpcInJvdW5kXCIsc3Ryb2tlTGluZWpvaW46XCJyb3VuZFwifSkscy5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwiTTIgMTdWNEMyIDIuODk1NDMgMi44OTU0MyAyIDQgMkgyMEMyMS4xMDQ2IDIgMjIgMi44OTU0MyAyMiA0VjE3QzIyIDE4LjEwNDYgMjEuMTA0NiAxOSAyMCAxOUg0QzIuODk1NDMgMTkgMiAxOC4xMDQ2IDIgMTdaXCIsc3Ryb2tlOlwiY3VycmVudENvbG9yXCJ9KSxzLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNOSAxMC41TDExIDEyLjVMMTUgOC41XCIsc3Ryb2tlOlwiY3VycmVudENvbG9yXCIsc3Ryb2tlTGluZWNhcDpcInJvdW5kXCIsc3Ryb2tlTGluZWpvaW46XCJyb3VuZFwifSkpfSx4PSgwLGwuZm9yd2FyZFJlZikoZyk7dmFyIEc9eDtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVk7O0FBQUMsSUFBSUEsQ0FBQyxHQUFDQyxNQUFNLENBQUNDLE1BQU07QUFBQyxJQUFJQyxDQUFDLEdBQUNGLE1BQU0sQ0FBQ0csY0FBYztBQUFDLElBQUlDLENBQUMsR0FBQ0osTUFBTSxDQUFDSyx3QkFBd0I7QUFBQyxJQUFJQyxDQUFDLEdBQUNOLE1BQU0sQ0FBQ08sbUJBQW1CO0VBQUNDLENBQUMsR0FBQ1IsTUFBTSxDQUFDUyxxQkFBcUI7RUFBQ0MsQ0FBQyxHQUFDVixNQUFNLENBQUNXLGNBQWM7RUFBQ0MsQ0FBQyxHQUFDWixNQUFNLENBQUNhLFNBQVMsQ0FBQ0MsY0FBYztFQUFDQyxDQUFDLEdBQUNmLE1BQU0sQ0FBQ2EsU0FBUyxDQUFDRyxvQkFBb0I7QUFBQyxJQUFJQyxDQUFDLEdBQUNB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