a1ce754e923aeaa6105c027991a0da2f
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAccessibilitySettings = exports.detectMotionPreferences = exports.createMotionListener = exports.announceToScreenReader = void 0;
// Accessibility utilities for NEOMINT animations
const detectMotionPreferences = () => {
  // Check for prefers-reduced-motion
  const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

  // Check for prefers-contrast
  const prefersHighContrast = window.matchMedia('(prefers-contrast: high)').matches;
  return {
    prefersReducedMotion,
    prefersHighContrast,
    respectMotion: prefersReducedMotion
  };
};
exports.detectMotionPreferences = detectMotionPreferences;
const getAccessibilitySettings = motionPreferences => {
  if (motionPreferences.prefersReducedMotion) {
    return {
      nodeCount: 15,
      // Fewer elements
      animationSpeed: 0.1,
      // Much slower animation
      connectionDistance: 60,
      // Shorter connections
      opacity: 0.3,
      // Reduced visual prominence
      disabled: false // Still show animation but subdued
    };
  }
  return null; // Use normal settings
};
exports.getAccessibilitySettings = getAccessibilitySettings;
const createMotionListener = callback => {
  const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
  const handleChange = e => {
    callback(e.matches);
  };
  mediaQuery.addEventListener('change', handleChange);
  return () => {
    mediaQuery.removeEventListener('change', handleChange);
  };
};
exports.createMotionListener = createMotionListener;
const announceToScreenReader = (message, priority = 'polite') => {
  const announcement = document.createElement('div');
  announcement.setAttribute('aria-live', priority);
  announcement.setAttribute('aria-atomic', 'true');
  announcement.style.position = 'absolute';
  announcement.style.left = '-10000px';
  announcement.style.width = '1px';
  announcement.style.height = '1px';
  announcement.style.overflow = 'hidden';
  document.body.appendChild(announcement);
  announcement.textContent = message;
  setTimeout(() => {
    document.body.removeChild(announcement);
  }, 1000);
};
exports.announceToScreenReader = announceToScreenReader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXRlY3RNb3Rpb25QcmVmZXJlbmNlcyIsInByZWZlcnNSZWR1Y2VkTW90aW9uIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJwcmVmZXJzSGlnaENvbnRyYXN0IiwicmVzcGVjdE1vdGlvbiIsImV4cG9ydHMiLCJnZXRBY2Nlc3NpYmlsaXR5U2V0dGluZ3MiLCJtb3Rpb25QcmVmZXJlbmNlcyIsIm5vZGVDb3VudCIsImFuaW1hdGlvblNwZWVkIiwiY29ubmVjdGlvbkRpc3RhbmNlIiwib3BhY2l0eSIsImRpc2FibGVkIiwiY3JlYXRlTW90aW9uTGlzdGVuZXIiLCJjYWxsYmFjayIsIm1lZGlhUXVlcnkiLCJoYW5kbGVDaGFuZ2UiLCJlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJhbm5vdW5jZVRvU2NyZWVuUmVhZGVyIiwibWVzc2FnZSIsInByaW9yaXR5IiwiYW5ub3VuY2VtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwic3R5bGUiLCJwb3NpdGlvbiIsImxlZnQiLCJ3aWR0aCIsImhlaWdodCIsIm92ZXJmbG93IiwiYm9keSIsImFwcGVuZENoaWxkIiwidGV4dENvbnRlbnQiLCJzZXRUaW1lb3V0IiwicmVtb3ZlQ2hpbGQiXSwic291cmNlcyI6WyJhY2Nlc3NpYmlsaXR5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFjY2Vzc2liaWxpdHkgdXRpbGl0aWVzIGZvciBORU9NSU5UIGFuaW1hdGlvbnNcclxuZXhwb3J0IGNvbnN0IGRldGVjdE1vdGlvblByZWZlcmVuY2VzID0gKCkgPT4ge1xyXG4gIC8vIENoZWNrIGZvciBwcmVmZXJzLXJlZHVjZWQtbW90aW9uXHJcbiAgY29uc3QgcHJlZmVyc1JlZHVjZWRNb3Rpb24gPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSknKS5tYXRjaGVzO1xyXG4gIFxyXG4gIC8vIENoZWNrIGZvciBwcmVmZXJzLWNvbnRyYXN0XHJcbiAgY29uc3QgcHJlZmVyc0hpZ2hDb250cmFzdCA9IHdpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1jb250cmFzdDogaGlnaCknKS5tYXRjaGVzO1xyXG4gIFxyXG4gIHJldHVybiB7XHJcbiAgICBwcmVmZXJzUmVkdWNlZE1vdGlvbixcclxuICAgIHByZWZlcnNIaWdoQ29udHJhc3QsXHJcbiAgICByZXNwZWN0TW90aW9uOiBwcmVmZXJzUmVkdWNlZE1vdGlvblxyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QWNjZXNzaWJpbGl0eVNldHRpbmdzID0gKG1vdGlvblByZWZlcmVuY2VzKSA9PiB7XHJcbiAgaWYgKG1vdGlvblByZWZlcmVuY2VzLnByZWZlcnNSZWR1Y2VkTW90aW9uKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBub2RlQ291bnQ6IDE1LCAgICAgICAgICAgLy8gRmV3ZXIgZWxlbWVudHNcclxuICAgICAgYW5pbWF0aW9uU3BlZWQ6IDAuMSwgICAgIC8vIE11Y2ggc2xvd2VyIGFuaW1hdGlvblxyXG4gICAgICBjb25uZWN0aW9uRGlzdGFuY2U6IDYwLCAgLy8gU2hvcnRlciBjb25uZWN0aW9uc1xyXG4gICAgICBvcGFjaXR5OiAwLjMsICAgICAgICAgICAvLyBSZWR1Y2VkIHZpc3VhbCBwcm9taW5lbmNlXHJcbiAgICAgIGRpc2FibGVkOiBmYWxzZSAgICAgICAgIC8vIFN0aWxsIHNob3cgYW5pbWF0aW9uIGJ1dCBzdWJkdWVkXHJcbiAgICB9O1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gbnVsbDsgLy8gVXNlIG5vcm1hbCBzZXR0aW5nc1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZU1vdGlvbkxpc3RlbmVyID0gKGNhbGxiYWNrKSA9PiB7XHJcbiAgY29uc3QgbWVkaWFRdWVyeSA9IHdpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKScpO1xyXG4gIFxyXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChlKSA9PiB7XHJcbiAgICBjYWxsYmFjayhlLm1hdGNoZXMpO1xyXG4gIH07XHJcbiAgXHJcbiAgbWVkaWFRdWVyeS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBoYW5kbGVDaGFuZ2UpO1xyXG4gIFxyXG4gIHJldHVybiAoKSA9PiB7XHJcbiAgICBtZWRpYVF1ZXJ5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGhhbmRsZUNoYW5nZSk7XHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBhbm5vdW5jZVRvU2NyZWVuUmVhZGVyID0gKG1lc3NhZ2UsIHByaW9yaXR5ID0gJ3BvbGl0ZScpID0+IHtcclxuICBjb25zdCBhbm5vdW5jZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBhbm5vdW5jZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWxpdmUnLCBwcmlvcml0eSk7XHJcbiAgYW5ub3VuY2VtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1hdG9taWMnLCAndHJ1ZScpO1xyXG4gIGFubm91bmNlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgYW5ub3VuY2VtZW50LnN0eWxlLmxlZnQgPSAnLTEwMDAwcHgnO1xyXG4gIGFubm91bmNlbWVudC5zdHlsZS53aWR0aCA9ICcxcHgnO1xyXG4gIGFubm91bmNlbWVudC5zdHlsZS5oZWlnaHQgPSAnMXB4JztcclxuICBhbm5vdW5jZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcclxuICBcclxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGFubm91bmNlbWVudCk7XHJcbiAgYW5ub3VuY2VtZW50LnRleHRDb250ZW50ID0gbWVzc2FnZTtcclxuICBcclxuICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoYW5ub3VuY2VtZW50KTtcclxuICB9LCAxMDAwKTtcclxufTsiXSwibWFwcGlu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